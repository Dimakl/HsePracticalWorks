<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CowsAndBulls</name>
    </assembly>
    <members>
        <member name="M:CowsAndBulls.Program.GetCorrectNamingForNCows(System.Int32)">
            <summary>
            Returns correct naming for n cows.
            </summary>
            <param name="n"> number of cows (guaranted to be less then eleven) </param>
            <returns> String with correct naming. </returns>
        </member>
        <member name="M:CowsAndBulls.Program.GetCorrectNamingForNBulls(System.Int32)">
            <summary>
            Returns correct naming for n bulls.
            </summary>
            <param name="n"> number of bulls (guaranteed to be less then eleven) </param>
            <returns> String with correct naming. </returns>
        </member>
        <member name="M:CowsAndBulls.Program.GetCorrectNamingForNumeral(System.Int32)">
            <summary>
            Returns correct naming for n numeral.
            </summary>
            <param name="n"> numeral number (guaranteed to be less then eleven) </param>
            <returns> String with correct naming. </returns>
        </member>
        <member name="M:CowsAndBulls.Program.GetNumberOfBulls(System.String,System.String)">
            <summary>
            Get number of digits that are on their correct position.
            </summary>
            <param name="suggestion"> number as string that was suggested by user </param>
            <param name="answer"> correct answer that user is guessing </param>
            <returns> Number of digits that are on their correct positions. </returns>
        </member>
        <member name="M:CowsAndBulls.Program.GetNumberOfCows(System.String,System.String)">
            <summary>
            Get number of digits that are both in suggestion and answer. (by the rules both in suggestion and in answer digits must be unique).
            </summary>
            <param name="suggestion"> number as string that was suggested by user </param>
            <param name="answer"> correct answer that user is guessing </param>
            <returns> Number of digits that are both in suggestion and answer. </returns>
        </member>
        <member name="M:CowsAndBulls.Program.GenerateEnvisionedString(System.Int32)">
            <summary>
            Generates number (returned as string for better usability afterwards) with set length, which follows the rules of Cows and Bulls game (first digit is not 0, and all digits are different).
            </summary>
            <param name="length"> number of digits (guaranteed be less then eleven) </param>
            <returns> Returns correct number, envisioned for game of Cows and Bulls </returns>
        </member>
        <member name="M:CowsAndBulls.Program.InputLength">
            <summary>
            Awaits for the correct input and returns it. 
            </summary>
            <returns> Wanted length for the number for playing Cows and Bulls. </returns>
        </member>
        <member name="M:CowsAndBulls.Program.IsInputValid(System.Int32,System.String)">
            <summary>
            Checks if input string is valid for <see cref="M:CowsAndBulls.Program.InputSuggestion(System.Int32)"> processing further </see>.
            </summary>
            <param name="length"> preset length of string </param>
            <param name="input"> string that is being validated</param>
            <returns> Is string valid. </returns>
        </member>
        <member name="M:CowsAndBulls.Program.PlayOneRound">
            <summary>
            One round of Cows and Bulls game is played.
            </summary>
        </member>
        <member name="M:CowsAndBulls.Program.IsAnotherRoundPlayed">
            <summary>
            Asks player if he wants to play another round of Cows and Bulls.
            </summary>
            <returns> Does player want to play another round. </returns>
        </member>
    </members>
</doc>
